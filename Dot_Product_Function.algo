FUNCTION dot_product(ps:FLOAT, T1,T2:ARRAY_OF FLOAT) : FLOAT
VAR
    i:INTEGER;
BEGIN
    Read(T1); Read(T2);
    FOR i FROM 0 TO T1.length-1  DO
        ps:= ps+ (T1[i]*T2[i]);
    END_FOR
    RETURN ps ;
END
ALGORITHM algorithm_name
VAR
    vectors: ARRAY_OF( ARRAY_OF FLOAT[2])[6]:=[[0,6],[0,0],[5,2,8],[1,9],[1,3],[6,7]];
    i,j:INTEGER;
    ps: FLOAT := 0;
    BEGIN
    FOR i FROM 0 TO vectors.length-2  DO
        FOR j FROM i+1 TO vectors.length DO
            IF (vectors[i].length = vectors[j].length) THEN
                ps=dot_product(vectors[i],vectors[j]);
                IF (ps=0) THEN
                    Write(vectors[i],"and",vectors[j],"are orthogonal.");
                ELSE
                    Write(vectors[i],"and",vectors[j],"are not orthogonal.");
                END_IF
            ELSE
                Write(vectors[i],"and",vectors[j],"don't have the same lenght.");
            END_IF    
        END_FOR
    END_FOR
END